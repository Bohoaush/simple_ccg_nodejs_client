{
  "_from": "casparcg-connection",
  "_id": "casparcg-connection@5.1.0",
  "_inBundle": false,
  "_integrity": "sha512-efYJG3jO2HPNJ0RUCvwmVlesXSbPfTxSoMuiUoOO86C7H5mTte4O8jGa6it7YShyBr8NTpUfPqiPEb7bKTAW3w==",
  "_location": "/casparcg-connection",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "casparcg-connection",
    "name": "casparcg-connection",
    "escapedName": "casparcg-connection",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/casparcg-connection/-/casparcg-connection-5.1.0.tgz",
  "_shasum": "6ea23c2895b5a28e2cd362a0ab0cd19c6ce68805",
  "_spec": "casparcg-connection",
  "_where": "/home/bortable/nodejs_ccg_client",
  "author": {
    "name": "Jesper Stærkær",
    "email": "jesper@superfly.tv",
    "url": "http://superfly.tv"
  },
  "bugs": {
    "url": "https://github.com/SuperFlyTV/casparcg-connection/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Johan Nyman",
      "email": "johan@superfly.tv",
      "url": "http://superfly.tv"
    },
    {
      "name": "Balte de Wit",
      "email": "balte.dewit@gmail.com",
      "url": "http://balte.nl"
    },
    {
      "name": "Andreas Jeansson",
      "email": "andreas.jeansson@svt.se",
      "url": "http://svt.se"
    },
    {
      "name": "Aleksandr Besedin",
      "email": "sasha.besedin@gmail.com",
      "url": "http://cosmonova.net"
    },
    {
      "name": "Craig Sweaton",
      "email": "craig@csweaton.com",
      "url": "https://csweaton.com"
    },
    {
      "name": "Stephan Nordnes Eriksen",
      "email": "Stephanruler@gmail.com"
    }
  ],
  "dependencies": {
    "highland": "^3.0.0-beta.6",
    "xml2js": "^0.4.19",
    "xmlbuilder": "^9.0.7"
  },
  "deprecated": false,
  "description": "Node.js Javascript/Typescript library for CasparCG connection and commands.",
  "devDependencies": {
    "@types/highland": "^2.10.7",
    "@types/jest": "^24.0.23",
    "@types/node": "^10.10.0",
    "@types/xml2js": "^0.4.2",
    "@types/xmlbuilder": "0.0.30",
    "codecov": "^3.7.0",
    "gh-pages": "^2.1.1",
    "jest": "^24.7.1",
    "node-license-validator": "^1.3.0",
    "npm-scripts-info": "^0.3.9",
    "open-cli": "^6.0.1",
    "standard-version": "^8.0.0",
    "trash-cli": "^3.0.0",
    "ts-jest": "^24.0.2",
    "tslint": "^5.15.0",
    "tslint-config-standard": "^8.0.1",
    "typedoc": "^0.16.0",
    "typescript": "3.6.x"
  },
  "engines": {
    "node": ">=10.10"
  },
  "files": [
    "/dist",
    "/CHANGELOG.md",
    "/README.md",
    "/LICENSE"
  ],
  "homepage": "http://superfly.tv",
  "keywords": [
    "casparcg",
    "caspar",
    "amcp",
    "socket",
    "tcp",
    "broadcast",
    "graphics",
    "superfly",
    "connection",
    "middleware",
    "remote"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "name": "casparcg-connection",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SuperFlyTV/casparcg-connection.git"
  },
  "scripts": {
    "build": "trash dist && yarn build:main",
    "build:main": "tsc -p tsconfig.build.json",
    "changelog": "standard-version",
    "cov": "jest --coverage; open-cli coverage/lcov-report/index.html",
    "cov-open": "open-cli coverage/lcov-report/index.html",
    "docs": "yarn docs:html && open-cli docs/index.html",
    "docs:html": "typedoc src/index.ts --ignoreCompilerErrors --excludePrivate --mode file --theme minimal --out docs",
    "docs:json": "typedoc --mode file --json docs/typedoc.json src/index.ts",
    "docs:publish": "yarn docs:html && gh-pages -d docs",
    "docs:test": "yarn docs:html",
    "info": "npm-scripts-info",
    "license-validate": "node-license-validator -p -d --allow-licenses MIT BSD BSD-3-Clause ISC Apache",
    "lint": "tslint --project tsconfig.json --config tslint.json",
    "release": "yarn reset && yarn test && yarn docs:publish && yarn changelog",
    "release:skiptest": "yarn reset && yarn docs:publish && yarn changelog",
    "reset": "git clean -dfx && git reset --hard && yarn",
    "send-coverage": "codecov",
    "test": "yarn lint && yarn unit",
    "test:integration": "yarn lint && jest --config=jest-integration.config.js",
    "unit": "jest --forceExit",
    "validate:dependencies": "yarn audit --groups dependencies && yarn license-validate",
    "validate:dev-dependencies": "yarn audit --groups devDependencies",
    "watch": "jest --watch"
  },
  "scripts-info": {
    "info": "Display information about the scripts",
    "build": "(Trash and re)build the library",
    "build:main": "Builds main build command without trash.",
    "lint": "Lint all typescript source files",
    "unit": "Build the library and run unit tests",
    "test": "Lint, build, and test the library",
    "test:integration": "Integration tests. Work in progress",
    "watch": "Watch source files, rebuild library on changes, rerun relevant tests",
    "cov": "Run tests, generate the HTML coverage report, and open it in a browser",
    "cov-open": "Open current test coverage",
    "send-coverage": "send coverage to codecov",
    "docs": "Generate HTML API documentation and open it in a browser",
    "docs:test": "Running the docs generation for testing.",
    "docs:html": "Generate HTML documentation",
    "docs:json": "Generate API documentation in typedoc JSON format",
    "docs:publish": "Generate HTML API documentation and push it to GitHub Pages",
    "changelog": "Bump package.json version, update CHANGELOG.md, tag a release",
    "release": "Clean, build, test, publish docs, and prepare release (a one-step publish process). Updates versions and creates git commits.",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "validate:dependencies": "Scan dependencies for vulnerabilities and check licenses",
    "license-validate": "Validate licenses for dependencies."
  },
  "standard-version": {
    "message": "chore(release): %s [skip ci]",
    "tagPrefix": ""
  },
  "typings": "dist/index.d.ts",
  "version": "5.1.0"
}
